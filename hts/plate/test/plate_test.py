import os
import pytest

from hts_io.screen_data import plate_layout_io

# Test file names
TEST_LAYOUT_medium = 'Control_07_2015_medium_layout.csv'
TEST_LAYOUT_miRNA = 'Control_07_2015_mimick_layout.csv'
TEST_LAYOUT_mock = 'Control_07_2015_mock_layout.csv'

import logging
logging.basicConfig(level=logging.DEBUG)

TEST_LAYOUT = [["s_1", "s_1", "s_17", "s_17", "s_33", "s_33", "s_49", "s_49", "s_65", "s_65", "neg_1", "neg_1", "s_81", "s_81", "s_97", "s_97", "s_113", "s_113", "s_129", "s_129", "s_145", "s_145", "s_161", "s_161"], ["s_2", "s_2", "s_18", "s_18", "s_34", "s_34", "s_50", "s_50", "s_66", "s_66", "neg_1", "neg_1", "s_82", "s_82", "s_98", "s_98", "s_114", "s_114", "s_130", "s_130", "s_146", "s_146", "s_162", "s_162"], ["s_3", "s_3", "s_19", "s_19", "s_35", "s_35", "s_51", "s_51", "s_67", "s_67", "pos_3", "pos_3", "s_83", "s_83", "s_99", "s_99", "s_115", "s_115", "s_131", "s_131", "s_147", "s_147", "s_163", "s_163"], ["s_4", "s_4", "s_20", "s_20", "s_36", "s_36", "s_52", "s_52", "s_68", "s_68", "pos_3", "pos_3", "s_84", "s_84", "s_100", "s_100", "s_116", "s_116", "s_132", "s_132", "s_148", "s_148", "s_164", "s_164"], ["s_5", "s_5", "s_21", "s_21", "s_37", "s_37", "s_53", "s_53", "s_69", "s_69", "pos_1", "pos_1", "s_85", "s_85", "s_101", "s_101", "s_117", "s_117", "s_133", "s_133", "s_149", "s_149", "s_165", "s_165"], ["s_6", "s_6", "s_22", "s_22", "s_38", "s_38", "s_54", "s_54", "s_70", "s_70", "pos_1", "pos_1", "s_86", "s_86", "s_102", "s_102", "s_118", "s_118", "s_134", "s_134", "s_150", "s_150", "s_166", "s_166"], ["s_7", "s_7", "s_23", "s_23", "s_39", "s_39", "s_55", "s_55", "s_71", "s_71", "neg_1", "neg_1", "s_87", "s_87", "s_103", "s_103", "s_119", "s_119", "s_135", "s_135", "s_151", "s_151", "s_167", "s_167"], ["s_8", "s_8", "s_24", "s_24", "s_40", "s_40", "s_56", "s_56", "s_72", "s_72", "neg_1", "neg_1", "s_88", "s_88", "s_104", "s_104", "s_120", "s_120", "s_136", "s_136", "s_152", "s_152", "s_168", "s_168"], ["s_9", "s_9", "s_25", "s_25", "s_41", "s_41", "s_57", "s_57", "s_73", "s_73", "pos_2", "pos_2", "s_89", "s_89", "s_105", "s_105", "s_121", "s_121", "s_137", "s_137", "s_153", "s_153", "s_169", "s_169"], ["s_10", "s_10", "s_26", "s_26", "s_42", "s_42", "s_58", "s_58", "s_74", "s_74", "pos_2", "pos_2", "s_90", "s_90", "s_106", "s_106", "s_122", "s_122", "s_138", "s_138", "s_154", "s_154", "s_170", "s_170"], ["s_11", "s_11", "s_27", "s_27", "s_43", "s_43", "s_59", "s_59", "s_75", "s_75", "mimic_29", "mimic_29", "s_91", "s_91", "s_107", "s_107", "s_123", "s_123", "s_139", "s_139", "s_155", "s_155", "s_171", "s_171"], ["s_12", "s_12", "s_28", "s_28", "s_44", "s_44", "s_60", "s_60", "s_76", "s_76", "mimic_29", "mimic_29", "s_92", "s_92", "s_108", "s_108", "s_124", "s_124", "s_140", "s_140", "s_156", "s_156", "s_172", "s_172"], ["s_13", "s_13", "s_29", "s_29", "s_45", "s_45", "s_61", "s_61", "s_77", "s_77", "mock", "mock", "s_93", "s_93", "s_109", "s_109", "s_125", "s_125", "s_141", "s_141", "s_157", "s_157", "s_173", "s_173"], ["s_14", "s_14", "s_30", "s_30", "s_46", "s_46", "s_62", "s_62", "s_78", "s_78", "mock", "mock", "s_94", "s_94", "s_110", "s_110", "s_126", "s_126", "s_142", "s_142", "s_158", "s_158", "s_174", "s_174"], ["s_15", "s_15", "s_31", "s_31", "s_47", "s_47", "s_63", "s_63", "s_79", "s_79", "neg_1", "neg_1", "s_95", "s_95", "s_111", "s_111", "s_127", "s_127", "s_143", "s_143", "s_159", "s_159", "s_175", "s_175"], ["s_16", "s_16", "s_32", "s_32", "s_48", "s_48", "s_64", "s_64", "s_80", "s_80", "neg_1", "neg_1", "s_96", "s_96", "s_112", "s_112", "s_128", "s_128", "s_144", "s_144", "s_160", "s_160", "s_176", "s_176"]]
TEST_LAYOUT_MEDIUM = [["medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium"], ["medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium"], ["medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "pos_2", "pos_2", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium"], ["medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "pos_2", "pos_2", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium"], ["medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "pos_1", "pos_1", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium"], ["medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "pos_1", "pos_1", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium"], ["medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium"], ["medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium"], ["medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "pos_2", "pos_2", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium"], ["medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "pos_2", "pos_2", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium"], ["medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium"], ["medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium"], ["medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium"], ["medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium"], ["medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium"], ["medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium", "medium"]]

notfixed = pytest.mark.notfixed

@pytest.fixture
def path():
    """Return the path to the test data files.
    """
    return os.path.join(os.path.abspath('.'), '../', 'test_data', 'plate_layout')

@pytest.mark.no_external_software_required
def test_read_envision_csv(path):
    test_plate_layout = plate_layout_io.read_envision_csv(os.path.join(path, TEST_LAYOUT_miRNA))
    assert test_plate_layout == TEST_LAYOUT

    test_plate_layout = plate_layout_io.read_envision_csv(os.path.join(path, TEST_LAYOUT_medium))
    assert test_plate_layout == TEST_LAYOUT_MEDIUM


