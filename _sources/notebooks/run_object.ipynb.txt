{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "Tutorial: Run instance\n",
    "=============================\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "If you would like to see the data file, go to /Users/elkeschaper/Python_projects/HTS/test_data/Raw_data/run_one_well_per_row_csv/test.csv\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " /Users/elkeschaper/.virtualenvs/hts/lib/python3.5/site-packages/matplotlib/__init__.py:1350: UserWarning: This call to matplotlib.use() has no effect\n",
      "because the backend has already been chosen;\n",
      "matplotlib.use() must be called *before* pylab, matplotlib.pyplot,\n",
      "or matplotlib.backends is imported for the first time.\n",
      "\n"
     ]
    }
   ],
   "source": [
    "%matplotlib inline\n",
    "import os\n",
    "\n",
    "from hts.run.run import Run\n",
    "from hts.paths import TUTORIAL_DATA_NORMALIZATION_PATH\n",
    "\n",
    "\n",
    "data_path = TUTORIAL_DATA_NORMALIZATION_PATH\n",
    "print(\"If you would like to see the data file, go to {}\".format(data_path))\n",
    "run = Run.create(path=data_path, origin=\"csv\", format=\"csv\", column_plate_name=\"Plate ID\", column_well=\"Well ID\", columns_readout=[\"Data0\", \"Data1\"], columns_meta= [\"Data2\"], width=24, height=16))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We create a `Run` instance from the original raw data. A `Run` can hold all information on readouts, plate layouts, and meta data on the samples. A `Run` instance provides all functionality to deal with the data, such as for input/output, quality control and analysis reporting, and hit selection. For more information on `Run` instances, and create statements, look here [Data IO](data_io) and [link to RUN](run). [TODO: In Run, add schema of Run/Plate/PlateData]\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
